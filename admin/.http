# Global file variable definitions
@hostname = http://localhost
@port = 3000
@host = {{hostname}}:{{port}}
@firebaseAuthApiKey = AIzaSyDLXpxnA8e-Br7uCms9mF_TzvMuv2QCzzU
@authHeader = Authorization: Bearer {{getAuth.response.body.idToken}}

### Create api_tester account if none
# @name signUp
POST https://identitytoolkit.googleapis.com/v1/accounts:signUp?key={{firebaseAuthApiKey}}
content-type: application/json

{
    "email": "api_tester@enkeldigital.com",
    "password": "securePassword",
    "returnSecureToken": true,
}


### Get auth credentials
# @name getAuth
POST https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key={{firebaseAuthApiKey}}
content-type: application/json

{
    "email": "api_tester@enkeldigital.com",
    "password": "securePassword",
    "returnSecureToken": true,
}

### ping
GET {{host}}/

### Get User
# GET /user/:userEmail
GET {{host}}/user/social@enkeldigital.com
{{authHeader}}

### Create new employee account and send them a email with a link to complete account creation
# Use a local address in the optional redirectUrl field
POST {{host}}/user/new
{{authHeader}}
content-type: application/json

{
    "accountCreationRequest": {
        "partnerID": 1,
        "email": "test@enkeldigital.com",
        "admin": false
    },
    "redirectUrl": "http://localhost:8081/#/signup"
}

### Get all subscription plans
GET {{host}}/subscription/plans/all

### Get Topup Options
GET {{host}}/topup/options

### Get user's points
# GET /points/:userID
GET {{host}}/points/1
{{authHeader}}

### Get user's plan
# GET /subscription/:userID
GET {{host}}/subscription/1
{{authHeader}}

### Get bot details
# GET /bot/:botID
GET {{host}}/bot/:botID
{{authHeader}}

### Get details for all the Bots of a business
# GET /bot/all/:businessID
GET {{host}}/bot/all/1
{{authHeader}}

### Create new bot
# POST /bot/new
POST {{host}}/bot/new
{{authHeader}}

### Update bot details
# PUT /bot/:botID
PUT {{host}}/bot/:botID
{{authHeader}}

### Delete bot
# DELETE /bot/:botID
DELETE {{host}}/bot/:botID
{{authHeader}}

### Get links for bot
# GET /links/?botID
GET {{host}}/links/?botID=1
{{authHeader}}

### Save new link for bot
# POST /links/new
POST {{host}}/links/new
{{authHeader}}
content-type: application/json

{
    "link": {
        "createdBy": 1,
        "botID": 1,
        "name": "Feedback link",
        "description": "Link for feedbacks",
        "dateStart": "1603372000",
        "dateEnd": null,
        "tags": [
            "product:x",
            "onlinePurchase"
        ]
    }
}


### Update link details
# PUT /links/?botID
PUT {{host}}/links/?botID=1
{{authHeader}}
content-type: application/json

{
    "botID": 1,
    "link": {
        "name": "New name for link"
    }
}

### Delete link
# DELETE /links/:linkID
DELETE {{host}}/links/1
{{authHeader}}

### Get review stats and review IDs for bot belonging to a business
# GET /reviews/bot/:botID
GET {{host}}/reviews/bot/1
{{authHeader}}

### Get review details with a reviewID
# GET /reviews/details/?:reviewID||?:reviewIDs
GET {{host}}/reviews/details/?reviewID=1
{{authHeader}}